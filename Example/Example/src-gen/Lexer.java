// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/Lexer.gold"
import gold.structures.automaton.*;
import gold.util.*;
import gold.visualization.automaton.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class Lexer {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=5;
      Object lexer=$fix(Lexer.createTransducer());
      $line=7;
      Object pushdown=$fix(Lexer.create());
      $line=8;
      Lexer.testLexer($cast(gold.structures.automaton.ITransducer.class,lexer),$cast(gold.structures.automaton.IPushdownAutomaton.class,pushdown));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"main",$line);
    }
  }
  public static Object testLexer(ITransducer M, IPushdownAutomaton P) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=14;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=16;
      Object input=$fix("");
      $line=19;
      System.out.println($message(new Object[]{"----------------------------"}));
      $line=20;
      System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
      $line=21;
      System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
      $line=22;
      Object string=$fix(((java.util.Scanner)sc).nextLine());
      $line=26;
      while (true) {
        if (!(!$opEqualY(string,"EXIT"))) break;
        $line=30;
        while (true) {
          if (!(!$opEqualY($invokeMethod("charAt",string,new Object[]{0}),'$'))) break;
          $line=31;
          input=$fix($opAdditY($opAdditY(input,string)," "));
          $line=32;
          string=$fix(((java.util.Scanner)sc).nextLine());
        }
        $line=35;
        Object result=$fix(((gold.structures.automaton.ITransducer)M).acceptsString($cast(java.lang.String.class,input)));
        $line=36;
        Object tokenStream=$fix(((gold.structures.automaton.ITransducer)M).getOutputString());
        $line=38;
        System.out.println($message(new Object[]{$opAdditY($opAdditY("The lexer did ",(($bool(result))?(""):("not ")))," accept the string.")}));
        $line=39;
        if ($bool(result)) {
          $line=41;
          System.out.println($message(new Object[]{$opAdditY("Token Stream: ",tokenStream)}));
          $line=42;
          result=$fix(((gold.structures.automaton.IPushdownAutomaton)P).acceptsString($cast(java.lang.String.class,tokenStream)));
          $line=43;
          System.out.println($message(new Object[]{$opAdditY("Parser result: ",(($bool(result))?("accepted "):("rejected ")))}));
        }
        $line=49;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=51;
        System.out.println($message(new Object[]{"Enter one or more lines. End with a single line with $"}));
        $line=52;
        System.out.println($message(new Object[]{"If you want to stop testing, enter EXIT"}));
        $line=53;
        string=$fix(((java.util.Scanner)sc).nextLine());
      }
      $line=56;
      System.out.println($message(new Object[]{"Good bye"}));
      $line=57;
      System.out.println($message(new Object[]{""}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"testLexer",$line);
    }
    return $result;
  }
  public static Object names=null;
  public static IPushdownAutomaton create() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=68;
      Object params=$fix(GCollections.asSet('L','R','N','S','W','E','A','b','c','F','v','n','B'));
      $line=69;
      Object ops=$fix(GCollections.asSet('r','V','X','Q','m','t','f','p','k','M','I','-','?','!','Y'));
      $line=70;
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object q:GCollections.unmodifiableCollection($opUnionY(ops,GCollections.asSet('S','E','Z',',')))) {
        for (Object v:GCollections.unmodifiableCollection($opIntvlY(0,1))) {
          $v1.add(GCollections.asList(q,v));
        }
      }
      Object Q=$fix($v1);
      $line=71;
      Object \u03A3=$fix($opUnionY($opUnionY(GCollections.asSet('(',')','{','}','[',']',';',','),ops),params));
      $line=72;
      Object \u0393=$fix($opUnionY($opUnionY(GCollections.asSet('(',')','{','}','[',']','n','v',';'),params),GCollections.asSet('f','s',',','F')));
      $line=73;
      Object q_0=$fix(GCollections.asList('S',0));
      $line=74;
      gold.structures.set.ISet $v3=$newSet();
      $v4:for (Object v:GCollections.unmodifiableCollection($opIntvlY(0,1))) {
        $v3.add(GCollections.asList('Y',v));
      }
      Object F=$fix($v3);
      $line=75;
      Object M=$fix($invokeConstructor(GPushdownAutomaton.class,new Object[]{Q,\u03A3,\u0393,q_0,F}));
      $line=77;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('S',0),GCollections.asList('r',0),$cast(java.lang.String.class,'r')),new Object[]{});
      $line=78;
      for (Object $v5:GCollections.unmodifiableCollection(GCollections.asSet('X','Q','m','t','f','p','k','M','I','-','?','!'))) {
        Object \u03C3=$v5;
        $line=79;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('Y',0),$cast(java.lang.String.class,'Y')),new Object[]{});
        $line=80;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList('Y',1),$cast(java.lang.String.class,'Y')),new Object[]{});
      }
      $line=83;
      for (Object $v6:GCollections.unmodifiableCollection(GCollections.asSet('V','X'))) {
        Object \u03C3=$v6;
        $line=84;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('r',0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=85;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('S',0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=86;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('E',0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
      }
      $line=88;
      for (Object $v7:GCollections.unmodifiableCollection(GCollections.asSet('m','t','f'))) {
        Object \u03C3=$v7;
        $line=89;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('S',0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=90;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('E',0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=91;
        for (Object $v8:GCollections.unmodifiableCollection($opDiffeY(GCollections.asSet('Q','m','t','f','p','k','M','I','-','?','!'),GCollections.asSet(\u03C3)))) {
          Object \u03B1=$v8;
          $line=92;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03B1,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
          $line=93;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03B1,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
        }
        $line=95;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('X',1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
        $line=96;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('X',0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
        $line=97;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,';')),new Object[]{$opAdditY(';',"")});
        $line=98;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,';')),new Object[]{$opAdditY(';',"")});
        $line=99;
        for (Object $v9:GCollections.unmodifiableCollection(GCollections.asSet('('))) {
          Object \u03C1=$v9;
          $line=100;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C1)),new Object[]{"F",$opAdditY(\u03C1,"")});
          $line=101;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C1)),new Object[]{"F",$opAdditY(\u03C1,"")});
          $line=103;
          Object set=null;
          $line=104;
          if ($bool($opEqualY(\u03C3,'m'))) {
            $line=105;
            for (Object $v10:GCollections.unmodifiableCollection(GCollections.asSet('v'))) {
              Object \u03C4=$v10;
              $line=106;
              $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C4)),new Object[]{});
              $line=107;
              $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C4)),new Object[]{$opAdditY(\u03C1,""),$opAdditY(\u03C4,"")});
            }
            $line=109;
            set=$fix(GCollections.asSet('n'));
          }
          else {
            $line=110;
            if ($bool($opEqualY(\u03C3,'t'))) {
              $line=111;
              set=$fix(GCollections.asSet('L','R','A'));
            }
            else {
              $line=113;
              set=$fix(GCollections.asSet('N','S','W','E'));
            }
          }
          $line=115;
          for (Object $v11:GCollections.unmodifiableCollection(set)) {
            Object \u03C4=$v11;
            $line=116;
            $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C4)),new Object[]{$opAdditY(\u03C1,""),$opAdditY(\u03C4,"")});
            $line=117;
            $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C4)),new Object[]{$opAdditY(\u03C1,""),$opAdditY(\u03C4,"")});
            $line=118;
            $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,')')),new Object[]{$opAdditY(\u03C4,""),";"});
            $line=119;
            $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,')')),new Object[]{$opAdditY(\u03C4,""),";"});
          }
          $line=122;
          $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,')')),new Object[]{});
          $line=123;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,')')),new Object[]{$opAdditY('v',""),";"});
        }
      }
      $line=127;
      for (Object $v12:GCollections.unmodifiableCollection(GCollections.asSet('Q','p','k','M','I'))) {
        Object \u03C3=$v12;
        $line=128;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('S',0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=129;
        $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('E',0),GCollections.asList('E',0),$cast(java.lang.String.class,\u03C3)),new Object[]{});
        $line=130;
        for (Object $v13:GCollections.unmodifiableCollection($opDiffeY(GCollections.asSet('Q','m','t','f','p','k','M','I','-','?','!'),GCollections.asSet(\u03C3)))) {
          Object \u03B1=$v13;
          $line=131;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03B1,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
          $line=132;
          $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03B1,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
        }
        $line=134;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('X',1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
        $line=135;
        $invokeMethod("push",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('X',0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C3)),new Object[]{"F"});
        $line=136;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,';')),new Object[]{$opAdditY(';',"")});
        $line=137;
        $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,';')),new Object[]{$opAdditY(';',"")});
        $line=138;
        for (Object $v14:GCollections.unmodifiableCollection(GCollections.asSet('('))) {
          Object \u03C1=$v14;
          $line=139;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList(\u03C3,0),$cast(java.lang.String.class,\u03C1)),new Object[]{"F",$opAdditY($opAdditY(\u03C1,""),"f,s")});
          $line=140;
          $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C1)),new Object[]{"F",$opAdditY($opAdditY(\u03C1,""),"f,s")});
          $line=142;
          Object set=null;
          $line=143;
          if ($bool($opEqualY(\u03C3,'Q'))) {
            $line=144;
            $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,'v')),new Object[]{});
            $line=145;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'v')),new Object[]{$opAdditY('s',"")});
            $line=146;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,',')),new Object[]{$opAdditY(',',"")});
            $line=147;
            $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'n')),new Object[]{$opAdditY('f',"")});
            $line=148;
            $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,')')),new Object[]{});
            $line=149;
            $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,')')),new Object[]{$opAdditY('(',""),";"});
          }
          else {
            $line=150;
            if ($bool(($opEqualY(\u03C3,'p')||$opEqualY(\u03C3,'k')))) {
              $line=151;
              $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,'v')),new Object[]{});
              $line=152;
              $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'v')),new Object[]{$opAdditY('s',"")});
              $line=153;
              $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'n')),new Object[]{$opAdditY('s',"")});
              $line=154;
              $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,',')),new Object[]{$opAdditY(',',"")});
              $line=155;
              $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'b')),new Object[]{$opAdditY('f',"")});
              $line=156;
              $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'c')),new Object[]{$opAdditY('f',"")});
              $line=157;
              $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,')')),new Object[]{});
              $line=158;
              $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,')')),new Object[]{$opAdditY('(',""),";"});
            }
            else {
              $line=159;
              if ($bool($opEqualY(\u03C3,'M'))) {
                $line=160;
                $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,')')),new Object[]{});
                $line=161;
                $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,')')),new Object[]{$opAdditY('(',""),";"});
                $line=162;
                $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,'v')),new Object[]{});
                $line=163;
                $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'v')),new Object[]{$opAdditY('s',"")});
                $line=164;
                $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'n')),new Object[]{$opAdditY('s',"")});
                $line=165;
                $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,',')),new Object[]{$opAdditY(',',"")});
                $line=166;
                for (Object $v15:GCollections.unmodifiableCollection(GCollections.asSet('F','L','R','B'))) {
                  Object \u03C4=$v15;
                  $line=168;
                  $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C4)),new Object[]{$opAdditY('f',"")});
                }
              }
              else {
                $line=171;
                if ($bool($opEqualY(\u03C3,'I'))) {
                  $line=172;
                  $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,')')),new Object[]{});
                  $line=173;
                  $invokeMethod("changeTop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,')')),new Object[]{$opAdditY('(',""),";"});
                  $line=174;
                  $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,0),GCollections.asList('E',0),$cast(java.lang.String.class,'v')),new Object[]{});
                  $line=175;
                  $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'v')),new Object[]{$opAdditY('s',"")});
                  $line=176;
                  $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,'n')),new Object[]{$opAdditY('s',"")});
                  $line=177;
                  $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,',')),new Object[]{$opAdditY(',',"")});
                  $line=178;
                  for (Object $v16:GCollections.unmodifiableCollection(GCollections.asSet('W','E','S','N'))) {
                    Object \u03C4=$v16;
                    $line=179;
                    $invokeMethod("pop",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(\u03C3,1),GCollections.asList(\u03C3,1),$cast(java.lang.String.class,\u03C4)),new Object[]{$opAdditY('f',"")});
                  }
                }
              }
            }
          }
        }
      }
      $line=186;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('V',0),GCollections.asList('Z',1),$cast(java.lang.String.class,'v')),new Object[]{});
      $line=187;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('Z',1),GCollections.asList(',',1),$cast(java.lang.String.class,',')),new Object[]{});
      $line=188;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList(',',1),GCollections.asList('V',1),$cast(java.lang.String.class,'v')),new Object[]{});
      $line=190;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('V',1),GCollections.asList(',',1),$cast(java.lang.String.class,',')),new Object[]{});
      $line=191;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('V',1),GCollections.asList('X',1),$cast(java.lang.String.class,'X')),new Object[]{});
      $line=192;
      $invokeMethod("ignore",((gold.structures.automaton.GPushdownAutomaton)M).delta(GCollections.asList('Z',1),GCollections.asList('X',1),$cast(java.lang.String.class,'X')),new Object[]{});
      $line=195;
      $result=M;
      if (true) break $try;
      $line=196;
      $rethrow(new RuntimeException("The function \"create()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"create",$line);
    }
    return $cast(IPushdownAutomaton.class,$result);
  }
  public static ITransducer createTransducer() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=203;
      Object states=$fix(GCollections.asSet("I"));
      $line=204;
      Object keywords=$fix(GCollections.asSet("ROBOT_R","VARS","BEGIN","assignVar","move","turn","face","put","pick","moveDir","moveInDir","skip","facing","not","END","left","right","north","south","west","east","around","balloons","chips","back","front"));
      $line=205;
      for (Object $v17:GCollections.unmodifiableCollection(keywords)) {
        Object token=$v17;
        $line=206;
        states=$fix($opUnionY(states,GCollections.asSet(token)));
        $line=207;
        Object sub=$fix($opAdditY($invokeMethod("charAt",token,new Object[]{0}),""));
        $line=208;
        for (int i=$int(1); i<=$int($opSubtrY($opAbsolY(token),1)); i++) {
          $line=209;
          states=$fix($opUnionY(states,GCollections.asSet(sub)));
          $line=210;
          sub=$fix($opAdditY(sub,$invokeMethod("charAt",token,new Object[]{i})));
        }
      }
      $line=213;
      Object Q=$fix($opUnionY(GCollections.asSet("I","Id","Num","Err"),states));
      $line=215;
      Object \u03A3=$fix($opUnionY($opUnionY($opUnionY($opIntvlY('0','9'),$opIntvlY('a','z')),GCollections.asSet('(',')',' ',';','{','}','[',']',',','_',':')),$opIntvlY('A','Z')));
      $line=216;
      Object Out=$fix($opUnionY($opUnionY(\u03A3,$opIntvlY('A','Z')),GCollections.asSet('?','!','-')));
      $line=217;
      Object q_0=$fix("I");
      $line=218;
      Object F=$fix(GCollections.asSet("I"));
      $line=219;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,Out,q_0,F,new GMethod(Lexer.class,"\u03B4"),new GMethod(Lexer.class,"g"),new GMethod(Lexer.class,"h")});
      if (true) break $try;
      $line=220;
      $rethrow(new RuntimeException("The function \"createTransducer()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"createTransducer",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=223;
      Object keywords=$fix(GCollections.asSet("ROBOT_R","VARS","BEGIN","assignVar","move","turn","face","put","pick","moveDir","moveInDir","skip","facing","not","END","left","right","north","south","west","east","around","balloons","chips","back","front"));
      $line=224;
      Object unary=$fix(GCollections.asSet("move","turn","face","moveDir","facing","not"));
      $line=225;
      Object set=$fix(GCollections.emptySet());
      $line=226;
      for (Object $v18:GCollections.unmodifiableCollection(keywords)) {
        Object token=$v18;
        $line=227;
        set=$fix($opUnionY(set,Lexer.x(token)));
      }
      $line=229;
      if ($bool($opEqualY(q,"Err"))) {
        $line=229;
        $result="Err";
        if (true) break $try;
      }
      else {
        $line=230;
        if ($opMembrY(\u03C3,GCollections.asSet('(',')',' ','{','}','[',']',';',','))) {
          $line=230;
          $result="I";
          if (true) break $try;
        }
        else {
          $line=231;
          if (($opEqualY(q,"I")&&$opMembrY(\u03C3,GCollections.asSet('R','V','B','a','m','t','f','p','s','n','E','l','r','n','s','w','e','a','b','c','b')))) {
            $line=231;
            $result=$invokeMethod(String.class,"valueOf",true,null,new Object[]{\u03C3});
            if (true) break $try;
          }
          else {
            $line=232;
            if (($opEqualY(q,"I")&&$opMembrY(\u03C3,$opIntvlY('0','9')))) {
              $line=232;
              $result="Num";
              if (true) break $try;
            }
            else {
              $line=233;
              if (($opEqualY(q,"Num")&&$opMembrY(\u03C3,$opIntvlY('0','9')))) {
                $line=233;
                $result="Num";
                if (true) break $try;
              }
              else {
                $line=234;
                if (($opEqualY(q,"Num")&&$opMembrY(\u03C3,$opUnionY($opIntvlY('a','z'),$opIntvlY('A','Z'))))) {
                  $line=234;
                  $result="Err";
                  if (true) break $try;
                }
                else {
                  $line=236;
                  if (($opMembrY(q,set)&&$opMembrY($opAdditY(q,\u03C3),set))) {
                    $line=236;
                    $result=$opAdditY(q,\u03C3);
                    if (true) break $try;
                  }
                  else {
                    $line=239;
                    $result="Id";
                    if (true) break $try;
                  }
                }
              }
            }
          }
        }
      }
      $line=241;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object g(Object q) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=246;
      $result="";
      if (true) break $try;
      $line=247;
      $rethrow(new RuntimeException("The function \"g(q:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"g",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=250;
      String s=null;
      s=$defaultValue(String.class);
      $line=251;
      s=$cast(String.class,$fix(""));
      $line=252;
      Object keywords=$fix(GCollections.asSet("ROBOT_R","VARS","BEGIN","assignVar","move","turn","face","put","pick","moveDir","moveInDir","skip","facing","not","END","left","right","north","south","west","east","around","balloons","chips","back","front"));
      $line=254;
      if ((!$opMembrY(q,GCollections.asSet("Err"))&&$opMembrY(\u03C3,GCollections.asSet('(',')',' ',';','{','}','[',']',',')))) {
        $line=255;
        if (!$opMembrY(\u03C3,GCollections.asSet(' '))) {
          $line=255;
          s=$cast(String.class,$fix($invokeMethod(String.class,"valueOf",true,null,new Object[]{\u03C3})));
        }
        $line=256;
        if ($opEqualY(q,"I")) {
          $line=256;
          $result=s;
          if (true) break $try;
        }
        else {
          $line=257;
          if ($opEqualY(q,"ROBOT_R")) {
            $line=257;
            $result=$opAdditY("r",s);
            if (true) break $try;
          }
          else {
            $line=258;
            if ($opEqualY(q,"VARS")) {
              $line=258;
              $result=$opAdditY("V",s);
              if (true) break $try;
            }
            else {
              $line=259;
              if ($opEqualY(q,"BEGIN")) {
                $line=259;
                $result=$opAdditY("X",s);
                if (true) break $try;
              }
              else {
                $line=260;
                if ($opEqualY(q,"assignVar")) {
                  $line=260;
                  $result=$opAdditY("Q",s);
                  if (true) break $try;
                }
                else {
                  $line=261;
                  if ($opEqualY(q,"move")) {
                    $line=261;
                    $result=$opAdditY("m",s);
                    if (true) break $try;
                  }
                  else {
                    $line=262;
                    if ($opEqualY(q,"turn")) {
                      $line=262;
                      $result=$opAdditY("t",s);
                      if (true) break $try;
                    }
                    else {
                      $line=263;
                      if ($opEqualY(q,"face")) {
                        $line=263;
                        $result=$opAdditY("f",s);
                        if (true) break $try;
                      }
                      else {
                        $line=264;
                        if ($opEqualY(q,"put")) {
                          $line=264;
                          $result=$opAdditY("p",s);
                          if (true) break $try;
                        }
                        else {
                          $line=265;
                          if ($opEqualY(q,"pick")) {
                            $line=265;
                            $result=$opAdditY("k",s);
                            if (true) break $try;
                          }
                          else {
                            $line=266;
                            if ($opEqualY(q,"moveDir")) {
                              $line=266;
                              $result=$opAdditY("M",s);
                              if (true) break $try;
                            }
                            else {
                              $line=267;
                              if ($opEqualY(q,"moveInDir")) {
                                $line=267;
                                $result=$opAdditY("I",s);
                                if (true) break $try;
                              }
                              else {
                                $line=268;
                                if ($opEqualY(q,"skip")) {
                                  $line=268;
                                  $result=$opAdditY("-",s);
                                  if (true) break $try;
                                }
                                else {
                                  $line=269;
                                  if ($opEqualY(q,"facing")) {
                                    $line=269;
                                    $result=$opAdditY("?",s);
                                    if (true) break $try;
                                  }
                                  else {
                                    $line=270;
                                    if ($opEqualY(q,"not")) {
                                      $line=270;
                                      $result=$opAdditY("!",s);
                                      if (true) break $try;
                                    }
                                    else {
                                      $line=271;
                                      if ($opEqualY(q,"END")) {
                                        $line=271;
                                        $result=$opAdditY("Y",s);
                                        if (true) break $try;
                                      }
                                      else {
                                        $line=272;
                                        if ($opEqualY(q,"left")) {
                                          $line=272;
                                          $result=$opAdditY("L",s);
                                          if (true) break $try;
                                        }
                                        else {
                                          $line=273;
                                          if ($opEqualY(q,"right")) {
                                            $line=273;
                                            $result=$opAdditY("R",s);
                                            if (true) break $try;
                                          }
                                          else {
                                            $line=274;
                                            if ($opEqualY(q,"north")) {
                                              $line=274;
                                              $result=$opAdditY("N",s);
                                              if (true) break $try;
                                            }
                                            else {
                                              $line=275;
                                              if ($opEqualY(q,"south")) {
                                                $line=275;
                                                $result=$opAdditY("S",s);
                                                if (true) break $try;
                                              }
                                              else {
                                                $line=276;
                                                if ($opEqualY(q,"west")) {
                                                  $line=276;
                                                  $result=$opAdditY("W",s);
                                                  if (true) break $try;
                                                }
                                                else {
                                                  $line=277;
                                                  if ($opEqualY(q,"east")) {
                                                    $line=277;
                                                    $result=$opAdditY("E",s);
                                                    if (true) break $try;
                                                  }
                                                  else {
                                                    $line=278;
                                                    if ($opEqualY(q,"around")) {
                                                      $line=278;
                                                      $result=$opAdditY("A",s);
                                                      if (true) break $try;
                                                    }
                                                    else {
                                                      $line=279;
                                                      if ($opEqualY(q,"balloons")) {
                                                        $line=279;
                                                        $result=$opAdditY("b",s);
                                                        if (true) break $try;
                                                      }
                                                      else {
                                                        $line=280;
                                                        if ($opEqualY(q,"chips")) {
                                                          $line=280;
                                                          $result=$opAdditY("c",s);
                                                          if (true) break $try;
                                                        }
                                                        else {
                                                          $line=281;
                                                          if ($opEqualY(q,"front")) {
                                                            $line=281;
                                                            $result=$opAdditY("F",s);
                                                            if (true) break $try;
                                                          }
                                                          else {
                                                            $line=282;
                                                            if ($opEqualY(q,"back")) {
                                                              $line=282;
                                                              $result=$opAdditY("B",s);
                                                              if (true) break $try;
                                                            }
                                                            else {
                                                              $line=283;
                                                              if ($opEqualY(q,"Num")) {
                                                                $line=283;
                                                                $result=$opAdditY("n",s);
                                                                if (true) break $try;
                                                              }
                                                              else {
                                                                $line=284;
                                                                $result=$opAdditY("v",s);
                                                                if (true) break $try;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      else {
        $line=286;
        $result="";
        if (true) break $try;
      }
      $line=288;
      $result="";
      if (true) break $try;
      $line=289;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"h",$line);
    }
    return $result;
  }
  public static Object x(Object token) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=292;
      Object states=$fix(GCollections.emptySet());
      $line=293;
      states=$fix($opUnionY(states,GCollections.asSet(token)));
      $line=294;
      Object sub=$fix($opAdditY($invokeMethod("charAt",token,new Object[]{0}),""));
      $line=295;
      for (int i=$int(1); i<=$int($opSubtrY($opAbsolY(token),1)); i++) {
        $line=296;
        states=$fix($opUnionY(states,GCollections.asSet(sub)));
        $line=297;
        sub=$fix($opAdditY(sub,$invokeMethod("charAt",token,new Object[]{i})));
      }
      $line=299;
      $result=states;
      if (true) break $try;
      $line=300;
      $rethrow(new RuntimeException("The function \"x(token:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,Lexer.class,"x",$line);
    }
    return $result;
  }
}
